{
	"info": {
		"_postman_id": "62b4947c-7792-4af8-896d-a3c84e44bdb8",
		"name": "HW_32_Group",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18610486"
	},
	"item": [
		{
			"name": "HW_1_EP_1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/get_method?name=Jess&age=33",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_1_EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Age is 33\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(\"33\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Jess",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_1_EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Jess\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_1?name=Jess&age=33&weight=95",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "weight",
							"value": "95"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_1_EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Salary is 1000 on start\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Jess",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_2?name=Jess&age=33&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"",
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_1_EP_5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=Jess&age=33&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_1_EP_6",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Jess&age=33&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_1_EP_7",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Jess",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_2_/first_Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body('This is the first responce from server!ss');\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_2_/user_info_3_Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data = pm.response.json();\r",
							"let req_data = request.data\r",
							"\r",
							"pm.test(\"Check name response\", function () {\r",
							"        pm.expect(resp_data.name).to.eql('Jess');\r",
							"});\r",
							"\r",
							"pm.test(\"Check age response\", function () {\r",
							"        pm.expect(resp_data.age).to.eql('33');\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary response\", function () {\r",
							"        pm.expect(resp_data.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check name response\", function () {\r",
							"        pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age response\", function () {\r",
							"        pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary response\", function () {\r",
							"        pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"console.log(resp_data.family)\r",
							"\r",
							"let req_slary = +req_data.salary\r",
							"let resp_salary_1_5_years = resp_data.family.u_salary_1_5_year\r",
							"\r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"        pm.expect(req_data.salary*4).to.eql(resp_salary_1_5_years);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Jess",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_2_/object_info_3_Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data = pm.response.json();\r",
							"let req_data = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Check name response\", function () {\r",
							"        pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age response\", function () {\r",
							"        pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary response\", function () {\r",
							"        pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"console.log(resp_data.family)\r",
							"\r",
							"pm.test(\"Check name_type\", function () {\r",
							"        pm.expect(resp_data.name).to.be.a('String');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check all properties\", function () {\r",
							"        pm.expect(resp_data).to.have.keys(\"age\", \"family\", \"name\", \"salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check inner properties\", function () {\r",
							"        pm.expect(resp_data.family).to.have.any.keys(\"children\", \"u_salary_1_5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check dog_name properties\", function () {\r",
							"        pm.expect(resp_data.family.pets.dog).to.have.any.keys(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check dog_age properties\", function () {\r",
							"        pm.expect(resp_data.family.pets.dog).to.have.any.keys(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check dog_name_Luky response\", function () {\r",
							"        pm.expect(resp_data.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check dog_age_4 response\", function () {\r",
							"        pm.expect(resp_data.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=Jess&age=33&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_2_/object_info_4_Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data = pm.response.json();\r",
							"let req_data = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Check name response\", function () {\r",
							"        pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age response\", function () {\r",
							"        pm.expect(resp_data.age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"console.log(req_data.salary)\r",
							"console.log(resp_data.salary)\r",
							"console.log(resp_data.salary[0])\r",
							"console.log(+resp_data.salary[1])\r",
							"console.log(+resp_data.salary[2])\r",
							"\r",
							"pm.test(\"Check salary_0 response\", function () {\r",
							"        pm.expect(resp_data.salary[0]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary_1 response\", function () {\r",
							"        pm.expect(+resp_data.salary[1]).to.eql(+req_data.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary_2 response\", function () {\r",
							"        pm.expect(+resp_data.salary[2]).to.eql(+req_data.salary*3);\r",
							"});\r",
							"\r",
							"var_name = resp_data.name\r",
							"var_age = resp_data.age\r",
							"var_salary = req_data.salary\r",
							"\r",
							"console.log(\"---- \" + var_salary)\r",
							"\r",
							"pm.environment.set(\"name\", var_name)\r",
							"pm.environment.set(\"age\", var_age)\r",
							"pm.environment.set(\"salary\", var_salary)\r",
							"\r",
							"// for (let i = 0; i < resp_data.salary.leght; i++) {\r",
							"//     console.log(resp_data.salary[i])\r",
							"// }\r",
							"\r",
							"for (item in resp_data.salary) {\r",
							"    console.log(\"I == \" + resp_data.salary[item])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_4?name=Jess&age=33&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Jess"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW_2_/user_info_2_Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data = pm.response.json();\r",
							"let req_data = request.data\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check start_qa_salary = request\", function () {\r",
							"        pm.expect(resp_data.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months = salary*2\", function () {\r",
							"        pm.expect(resp_data.qa_salary_after_6_months).to.eql(+req_data.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months = salary*2.7\", function () {\r",
							"        pm.expect(resp_data.qa_salary_after_12_months).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year = salary*3.3\", function () {\r",
							"        pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years = salary*3.8\", function () {\r",
							"        pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(+req_data.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_name[1] = salary_request\", function () {\r",
							"        pm.expect(resp_data.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_age = age_request\", function () {\r",
							"        pm.expect(resp_data.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_salary_5_years = salary*4.2\", function () {\r",
							"        pm.expect(resp_data.person.u_salary_5_years).to.eql(+req_data.salary*4.2);\r",
							"});\r",
							"\r",
							"// for (let = 0; i < resp_data.person.u_name.length; i++) {\r",
							"//     console.log(resp_data.person.u_name[i])\r",
							"// }\r",
							"\r",
							"for (item in resp_data.person.u_name) {\r",
							"    console.log(\"I == \" + resp_data.person.u_name[item])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		}
	]
}